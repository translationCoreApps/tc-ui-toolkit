"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactContainerDimensions = _interopRequireDefault(require("react-container-dimensions"));

var _reactBootstrap = require("react-bootstrap");

var _utils = require("../helpers/utils");

require("./Pane.styles.css");

var _Verse = _interopRequireDefault(require("../Verse"));

// components
var Pane = function Pane(_ref) {
  var index = _ref.index,
      verse = _ref.verse,
      chapter = _ref.chapter,
      bibleId = _ref.bibleId,
      direction = _ref.direction,
      translate = _ref.translate,
      removePane = _ref.removePane,
      description = _ref.description,
      languageName = _ref.languageName,
      verseElements = _ref.verseElements,
      clickToRemoveResourceLabel = _ref.clickToRemoveResourceLabel;
  var headingText = bibleId !== 'targetBible' ? languageName + ' (' + bibleId.toUpperCase() + ')' : languageName || '';
  var PANECHAR = 9;
  var localizedDescription = (0, _utils.getTranslation)(translate, "pane.".concat(description), description);
  return _react["default"].createElement("div", {
    className: "pane-container"
  }, _react["default"].createElement("div", {
    className: "pane-title-container"
  }, _react["default"].createElement("div", {
    className: "pane-title-container-content"
  }, _react["default"].createElement("span", {
    className: headingText.length > 21 ? 'pane-title-text hint--bottom hint--medium' : 'pane-title-text',
    "aria-label": headingText
  }, headingText.length > 21 ? headingText.slice(0, 21) + '...' : headingText), _react["default"].createElement(_reactContainerDimensions["default"], null, function (_ref2) {
    var width = _ref2.width;
    return _react["default"].createElement("span", {
      className: localizedDescription.length > width / PANECHAR ? 'pane-subtitle-text hint--bottom hint--medium' : 'pane-subtitle-text',
      "aria-label": localizedDescription
    }, localizedDescription.length > width / PANECHAR ? localizedDescription.slice(0, Math.round(width / PANECHAR)) + '...' : localizedDescription);
  })), _react["default"].createElement(_reactBootstrap.Glyphicon, {
    className: "remove-glyph-icon",
    glyph: 'remove',
    title: clickToRemoveResourceLabel,
    onClick: function onClick() {
      return removePane(index);
    }
  })), _react["default"].createElement("div", {
    className: direction === 'ltr' ? 'verse-content-container-ltr' : 'verse-content-container-rtl'
  }, _react["default"].createElement(_Verse["default"], {
    verse: verse,
    bibleId: bibleId,
    chapter: chapter,
    translate: translate,
    direction: direction,
    verseElements: verseElements
  })));
};

Pane.propTypes = {
  index: _propTypes["default"].number.isRequired,
  bibleId: _propTypes["default"].string.isRequired,
  languageName: _propTypes["default"].string.isRequired,
  direction: _propTypes["default"].string.isRequired,
  description: _propTypes["default"].string.isRequired,
  chapter: _propTypes["default"].number.isRequired,
  verse: _propTypes["default"].number.isRequired,
  removePane: _propTypes["default"].func.isRequired,
  translate: _propTypes["default"].func.isRequired,
  clickToRemoveResourceLabel: _propTypes["default"].string.isRequired,
  verseElements: _propTypes["default"].oneOfType([_propTypes["default"].element, _propTypes["default"].string, _propTypes["default"].array]).isRequired
};
Pane.defaultProps = {
  verseElements: []
};
var _default = Pane;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9TY3JpcHR1cmVQYW5lL1BhbmUvaW5kZXguanMiXSwibmFtZXMiOlsiUGFuZSIsImluZGV4IiwidmVyc2UiLCJjaGFwdGVyIiwiYmlibGVJZCIsImRpcmVjdGlvbiIsInRyYW5zbGF0ZSIsInJlbW92ZVBhbmUiLCJkZXNjcmlwdGlvbiIsImxhbmd1YWdlTmFtZSIsInZlcnNlRWxlbWVudHMiLCJjbGlja1RvUmVtb3ZlUmVzb3VyY2VMYWJlbCIsImhlYWRpbmdUZXh0IiwidG9VcHBlckNhc2UiLCJQQU5FQ0hBUiIsImxvY2FsaXplZERlc2NyaXB0aW9uIiwibGVuZ3RoIiwic2xpY2UiLCJ3aWR0aCIsIk1hdGgiLCJyb3VuZCIsInByb3BUeXBlcyIsIlByb3BUeXBlcyIsIm51bWJlciIsImlzUmVxdWlyZWQiLCJzdHJpbmciLCJmdW5jIiwib25lT2ZUeXBlIiwiZWxlbWVudCIsImFycmF5IiwiZGVmYXVsdFByb3BzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFFQTs7QUFHQTs7QUFEQTtBQUdBLElBQU1BLElBQUksR0FBRyxTQUFQQSxJQUFPLE9BWVA7QUFBQSxNQVhKQyxLQVdJLFFBWEpBLEtBV0k7QUFBQSxNQVZKQyxLQVVJLFFBVkpBLEtBVUk7QUFBQSxNQVRKQyxPQVNJLFFBVEpBLE9BU0k7QUFBQSxNQVJKQyxPQVFJLFFBUkpBLE9BUUk7QUFBQSxNQVBKQyxTQU9JLFFBUEpBLFNBT0k7QUFBQSxNQU5KQyxTQU1JLFFBTkpBLFNBTUk7QUFBQSxNQUxKQyxVQUtJLFFBTEpBLFVBS0k7QUFBQSxNQUpKQyxXQUlJLFFBSkpBLFdBSUk7QUFBQSxNQUhKQyxZQUdJLFFBSEpBLFlBR0k7QUFBQSxNQUZKQyxhQUVJLFFBRkpBLGFBRUk7QUFBQSxNQURKQywwQkFDSSxRQURKQSwwQkFDSTtBQUNKLE1BQU1DLFdBQVcsR0FBR1IsT0FBTyxLQUFLLGFBQVosR0FBNEJLLFlBQVksR0FBRyxJ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QUFVSyxTQUFWLENBQW9CLENBQ2pDTCxzQkFBVU0sT0FEdUIsRUFFakNOLHNCQUFVRyxNQUZ1QixFQUdqQ0gsc0JBQVVPLEtBSHVCLENBQXBCLEVBSVpMO0FBZlksQ0FBakI7QUFrQkF4QixJQUFJLENBQUM4QixZQUFMLEdBQW9CO0FBQUVwQixFQUFBQSxhQUFhLEVBQUU7QUFBakIsQ0FBcEI7ZUFFZVYsSSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IENvbnRhaW5lckRpbWVuc2lvbnMgZnJvbSAncmVhY3QtY29udGFpbmVyLWRpbWVuc2lvbnMnO1xuaW1wb3J0IHsgR2x5cGhpY29uIH0gZnJvbSAncmVhY3QtYm9vdHN0cmFwJztcbmltcG9ydCB7IGdldFRyYW5zbGF0aW9uIH0gZnJvbSAnLi4vaGVscGVycy91dGlscyc7XG5cbmltcG9ydCAnLi9QYW5lLnN0eWxlcy5jc3MnO1xuXG4vLyBjb21wb25lbnRzXG5pbXBvcnQgVmVyc2UgZnJvbSAnLi4vVmVyc2UnO1xuXG5jb25zdCBQYW5lID0gKHtcbiAgaW5kZXgsXG4gIHZlcnNlLFxuICBjaGFwdGVyLFxuICBiaWJsZUlkLFxuICBkaXJlY3Rpb24sXG4gIHRyYW5zbGF0ZSxcbiAgcmVtb3ZlUGFuZSxcbiAgZGVzY3JpcHRpb24sXG4gIGxhbmd1YWdlTmFtZSxcbiAgdmVyc2VFbGVtZW50cyxcbiAgY2xpY2tUb1JlbW92ZVJlc291cmNlTGFiZWwsXG59KSA9PiB7XG4gIGNvbnN0IGhlYWRpbmdUZXh0ID0gYmlibGVJZCAhPT0gJ3RhcmdldEJpYmxlJyA/IGxhbmd1YWdlTmFtZSArICcgKCcgKyBiaWJsZUlkLnRvVXBwZXJDYXNlKCkgKyAnKScgOiAobGFuZ3VhZ2VOYW1lIHx8ICcnKTtcbiAgY29uc3QgUEFORUNIQVIgPSA5O1xuICBjb25zdCBsb2NhbGl6ZWREZXNjcmlwdGlvbiA9IGdldFRyYW5zbGF0aW9uKHRyYW5zbGF0ZSwgYHBhbmUuJHtkZXNjcmlwdGlvbn1gLCBkZXNjcmlwdGlvbik7XG4gIHJldHVybiAoXG4gICAgPGRpdiBjbGFzc05hbWU9XCJwYW5lLWNvbnRhaW5lclwiPlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJwYW5lLXRpdGxlLWNvbnRhaW5lclwiPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInBhbmUtdGl0bGUtY29udGFpbmVyLWNvbnRlbnRcIj5cbiAgICAgICAgICA8c3BhblxuICAgICAgICAgICAgY2xhc3NOYW1lPXtoZWFkaW5nVGV4dC5sZW5ndGggPiAyMSA/ICdwYW5lLXRpdGxlLXRleHQgaGludC0tYm90dG9tIGhpbnQtLW1lZGl1bScgOiAncGFuZS10aXRsZS10ZXh0J31cbiAgICAgICAgICAgIGFyaWEtbGFiZWw9e2hlYWRpbmdUZXh0fT5cbiAgICAgICAgICAgIHtoZWFkaW5nVGV4dC5sZW5ndGggPiAyMSA/IGhlYWRpbmdUZXh0LnNsaWNlKDAsIDIxKSArICcuLi4nIDogaGVhZGluZ1RleHR9XG4gICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgIDxDb250YWluZXJEaW1lbnNpb25zPlxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAoeyB3aWR0aCB9KSA9PlxuICAgICAgICAgICAgICAgIDxzcGFuXG4gICAgICAgICAgICAgICAgICBjbGFzc05hbWU9e2xvY2FsaXplZERlc2NyaXB0aW9uLmxlbmd0aCA+IHdpZHRoL1BBTkVDSEFSID8gJ3BhbmUtc3VidGl0bGUtdGV4dCBoaW50LS1ib3R0b20gaGludC0tbWVkaXVtJyA6ICdwYW5lLXN1YnRpdGxlLXRleHQnfVxuICAgICAgICAgICAgICAgICAgYXJpYS1sYWJlbD17bG9jYWxpemVkRGVzY3JpcHRpb259PlxuICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBsb2NhbGl6ZWREZXNjcmlwdGlvbi5sZW5ndGggPiB3aWR0aC9QQU5FQ0hBUiA/XG4gICAgICAgICAgICAgICAgICAgICAgbG9jYWxpemVkRGVzY3JpcHRpb24uc2xpY2UoMCwgTWF0aC5yb3VuZCh3aWR0aC9QQU5FQ0hBUikpICsgJy4uLicgOlxuICAgICAgICAgICAgICAgICAgICAgIGxvY2FsaXplZERlc2NyaXB0aW9uXG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgfVxuICAgICAgICAgIDwvQ29udGFpbmVyRGltZW5zaW9ucz5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxHbHlwaGljb25cbiAgICAgICAgICBjbGFzc05hbWU9XCJyZW1vdmUtZ2x5cGgtaWNvblwiXG4gICAgICAgICAgZ2x5cGg9eydyZW1vdmUnfVxuICAgICAgICAgIHRpdGxlPXtjbGlja1RvUmVtb3ZlUmVzb3VyY2VMYWJlbH1cbiAgICAgICAgICBvbkNsaWNrPXsoKSA9PiByZW1vdmVQYW5lKGluZGV4KX1cbiAgICAgICAgLz5cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdiBjbGFzc05hbWU9e2RpcmVjdGlvbiA9PT0gJ2x0cicgPyAndmVyc2UtY29udGVudC1jb250YWluZXItbHRyJyA6ICd2ZXJzZS1jb250ZW50LWNvbnRhaW5lci1ydGwnfT5cbiAgICAgICAgPFZlcnNlXG4gICAgICAgICAgdmVyc2U9e3ZlcnNlfVxuICAgICAgICAgIGJpYmxlSWQ9e2JpYmxlSWR9XG4gICAgICAgICAgY2hhcHRlcj17Y2hhcHRlcn1cbiAgICAgICAgICB0cmFuc2xhdGU9e3RyYW5zbGF0ZX1cbiAgICAgICAgICBkaXJlY3Rpb249e2RpcmVjdGlvbn1cbiAgICAgICAgICB2ZXJzZUVsZW1lbnRzPXt2ZXJzZUVsZW1lbnRzfVxuICAgICAgICAvPlxuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG4gICk7XG59O1xuXG5QYW5lLnByb3BUeXBlcyA9IHtcbiAgaW5kZXg6IFByb3BUeXBlcy5udW1iZXIuaXNSZXF1aXJlZCxcbiAgYmlibGVJZDogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICBsYW5ndWFnZU5hbWU6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcbiAgZGlyZWN0aW9uOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gIGRlc2NyaXB0aW9uOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gIGNoYXB0ZXI6IFByb3BUeXBlcy5udW1iZXIuaXNSZXF1aXJlZCxcbiAgdmVyc2U6IFByb3BUeXBlcy5udW1iZXIuaXNSZXF1aXJlZCxcbiAgcmVtb3ZlUGFuZTogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgdHJhbnNsYXRlOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICBjbGlja1RvUmVtb3ZlUmVzb3VyY2VMYWJlbDogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICB2ZXJzZUVsZW1lbnRzOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtcbiAgICBQcm9wVHlwZXMuZWxlbWVudCxcbiAgICBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIFByb3BUeXBlcy5hcnJheSxcbiAgXSkuaXNSZXF1aXJlZCxcbn07XG5cblBhbmUuZGVmYXVsdFByb3BzID0geyB2ZXJzZUVsZW1lbnRzOiBbXSB9O1xuXG5leHBvcnQgZGVmYXVsdCBQYW5lO1xuIl19