"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.delay = delay;
exports.getTranslation = getTranslation;

/**
 * Delays code execution for a number of ms given.
 * @param {ms} ms
 */
function delay(ms) {
  return new Promise(function (resolve) {
    return setTimeout(resolve, ms);
  });
}
/**
 * lookup translation for text or key.  First looks for a static translation and then tries a dynamic translation
 * @param {Function} translate - translation function
 * @param {String} text - string or key to translate
 * @param {String} deflt - default string to use if no translation is found
 * @param {Object} params - Params to use for printing
 * @return {String} translated text
 */


function getTranslation(translate, text, deflt) {
  var key = text.toLowerCase();
  key = key.replace(' ', '_');
  var translation;
  translation = translate(key);

  if (!translation || translation.indexOf('Missing translation key') >= 0) {
    // if not translated, return original text
    translation = deflt;
  }

  return translation;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9TY3JpcHR1cmVQYW5lL2hlbHBlcnMvdXRpbHMuanMiXSwibmFtZXMiOlsiZGVsYXkiLCJtcyIsIlByb21pc2UiLCJyZXNvbHZlIiwic2V0VGltZW91dCIsImdldFRyYW5zbGF0aW9uIiwidHJhbnNsYXRlIiwidGV4dCIsImRlZmx0Iiwia2V5IiwidG9Mb3dlckNhc2UiLCJyZXBsYWNlIiwidHJhbnNsYXRpb24iLCJpbmRleE9mIl0sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBOzs7O0FBSU8sU0FBU0EsS0FBVCxDQUFlQyxFQUFmLEVBQW1CO0FBQ3hCLFNBQU8sSUFBSUMsT0FBSixDQUFZLFVBQUNDLE9BQUQ7QUFBQSxXQUNqQkMsVUFBVSxDQUFDRCxPQUFELEVBQVVGLEVBQVYsQ0FETztBQUFBLEdBQVosQ0FBUDtBQUdEO0FBRUQ7Ozs7Ozs7Ozs7QUFRTyxTQUFTSSxjQUFULENBQXdCQyxTQUF4QixFQUFtQ0MsSUFBbkMsRUFBeUNDLEtBQXpDLEVBQWdEO0FBQ3JELE1BQUlDLEdBQUcsR0FBR0YsSUFBSSxDQUFDRyxXQUFMLEVBQVY7QUFDQUQsRUFBQUEsR0FBRyxHQUFHQSxHQUFHLENBQUNFLE9BQUosQ0FBWSxHQUFaLEVBQWlCLEdBQWpCLENBQU47QUFDQSxNQUFJQyxXQUFKO0FBQ0FBLEVBQUFBLFdBQVcsR0FBR04sU0FBUyxDQUFDRyxHQUFELENBQXZCOztBQUVBLE1BQUksQ0FBQ0csV0FBRCxJQUFpQkEsV0FBVyxDQUFDQyxPQUFaLENBQW9CLHlCQUFwQixLQUFrRCxDQUF2RSxFQUEyRTtBQUFFO0FBQzNFRCxJQUFBQSxXQUFXLEdBQUdKLEtBQWQ7QUFDRDs7QUFDRCxTQUFPSSxXQUFQO0FBQ0QiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIERlbGF5cyBjb2RlIGV4ZWN1dGlvbiBmb3IgYSBudW1iZXIgb2YgbXMgZ2l2ZW4uXG4gKiBAcGFyYW0ge21zfSBtc1xuICovXG5leHBvcnQgZnVuY3Rpb24gZGVsYXkobXMpIHtcbiAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PlxuICAgIHNldFRpbWVvdXQocmVzb2x2ZSwgbXMpLFxuICApO1xufVxuXG4vKipcbiAqIGxvb2t1cCB0cmFuc2xhdGlvbiBmb3IgdGV4dCBvciBrZXkuICBGaXJzdCBsb29rcyBmb3IgYSBzdGF0aWMgdHJhbnNsYXRpb24gYW5kIHRoZW4gdHJpZXMgYSBkeW5hbWljIHRyYW5zbGF0aW9uXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSB0cmFuc2xhdGUgLSB0cmFuc2xhdGlvbiBmdW5jdGlvblxuICogQHBhcmFtIHtTdHJpbmd9IHRleHQgLSBzdHJpbmcgb3Iga2V5IHRvIHRyYW5zbGF0ZVxuICogQHBhcmFtIHtTdHJpbmd9IGRlZmx0IC0gZGVmYXVsdCBzdHJpbmcgdG8gdXNlIGlmIG5vIHRyYW5zbGF0aW9uIGlzIGZvdW5kXG4gKiBAcGFyYW0ge09iamVjdH0gcGFyYW1zIC0gUGFyYW1zIHRvIHVzZSBmb3IgcHJpbnRpbmdcbiAqIEByZXR1cm4ge1N0cmluZ30gdHJhbnNsYXRlZCB0ZXh0XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRUcmFuc2xhdGlvbih0cmFuc2xhdGUsIHRleHQsIGRlZmx0KSB7XG4gIGxldCBrZXkgPSB0ZXh0LnRvTG93ZXJDYXNlKCk7XG4gIGtleSA9IGtleS5yZXBsYWNlKCcgJywgJ18nKTtcbiAgbGV0IHRyYW5zbGF0aW9uO1xuICB0cmFuc2xhdGlvbiA9IHRyYW5zbGF0ZShrZXkpO1xuXG4gIGlmICghdHJhbnNsYXRpb24gfHwgKHRyYW5zbGF0aW9uLmluZGV4T2YoJ01pc3NpbmcgdHJhbnNsYXRpb24ga2V5JykgPj0gMCkpIHsgLy8gaWYgbm90IHRyYW5zbGF0ZWQsIHJldHVybiBvcmlnaW5hbCB0ZXh0XG4gICAgdHJhbnNsYXRpb24gPSBkZWZsdDtcbiAgfVxuICByZXR1cm4gdHJhbnNsYXRpb247XG59Il19