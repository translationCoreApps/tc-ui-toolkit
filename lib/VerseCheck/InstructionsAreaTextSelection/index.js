"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.QuoatationMarks = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var windowSelectionHelpers = _interopRequireWildcard(require("../helpers/windowSelectionHelpers"));

var _fontUtils = require("../../common/fontUtils");

var ELLIPSIS = 'â€¦';

var QuoatationMarks = function QuoatationMarks(_ref) {
  var children = _ref.children;
  return _react["default"].createElement("strong", {
    style: {
      color: 'var(--accent-color)'
    }
  }, '"', children, '"');
};

exports.QuoatationMarks = QuoatationMarks;
QuoatationMarks.propTypes = {
  children: _propTypes["default"].object.isRequired
};

var getSelectionSpans = function getSelectionSpans(selections, targetLanguageFont) {
  var results = [];
  var fontClass = (0, _fontUtils.getFontClassName)(targetLanguageFont);

  for (var i = 0, len = selections.length; i < len; i++) {
    var selection = selections[i];
    var index = i;
    results.push(_react["default"].createElement("span", {
      key: index
    }, _react["default"].createElement("strong", {
      style: {
        color: 'var(--accent-color)'
      },
      className: fontClass
    }, "".concat(selection.text.trim())), selections[index + 1] ? _react["default"].createElement("span", null, ' ') : null));
  }

  return results;
};

var InstructionsAreaTextSelection = function InstructionsAreaTextSelection(_ref2) {
  var verseText = _ref2.verseText,
      selections = _ref2.selections,
      targetLanguageFont = _ref2.targetLanguageFont;
  var fontClass = (0, _fontUtils.getFontClassName)(targetLanguageFont);

  if (windowSelectionHelpers.shouldRenderEllipsis(selections, verseText)) {
    return _react["default"].createElement(QuoatationMarks, null, selections[0].text.trim(), _react["default"].createElement("strong", {
      style: {
        color: 'var(--accent-color)'
      },
      className: fontClass
    }, " ".concat(ELLIPSIS, " ")), selections[selections.length - 1].text.trim());
  } else {
    return _react["default"].createElement(QuoatationMarks, null, getSelectionSpans(selections, targetLanguageFont));
  }
};

InstructionsAreaTextSelection.propTypes = {
  selections: _propTypes["default"].array.isRequired,
  verseText: _propTypes["default"].string.isRequired,
  targetLanguageFont: _propTypes["default"].string
};
var _default = InstructionsAreaTextSelection;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9WZXJzZUNoZWNrL0luc3RydWN0aW9uc0FyZWFUZXh0U2VsZWN0aW9uL2luZGV4LmpzIl0sIm5hbWVzIjpbIkVMTElQU0lTIiwiUXVvYXRhdGlvbk1hcmtzIiwiY2hpbGRyZW4iLCJjb2xvciIsInByb3BUeXBlcyIsIlByb3BUeXBlcyIsIm9iamVjdCIsImlzUmVxdWlyZWQiLCJnZXRTZWxlY3Rpb25TcGFucyIsInNlbGVjdGlvbnMiLCJ0YXJnZXRMYW5ndWFnZUZvbnQiLCJyZXN1bHRzIiwiZm9udENsYXNzIiwiaSIsImxlbiIsImxlbmd0aCIsInNlbGVjdGlvbiIsImluZGV4IiwicHVzaCIsInRleHQiLCJ0cmltIiwiSW5zdHJ1Y3Rpb25zQXJlYVRleHRTZWxlY3Rpb24iLCJ2ZXJzZVRleHQiLCJ3aW5kb3dTZWxlY3Rpb25IZWxwZXJzIiwic2hvdWxkUmVuZGVyRWxsaXBzaXMiLCJhcnJheSIsInN0cmluZyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFFQSxJQUFNQSxRQUFRLEdBQUcsR0FBakI7O0FBRU8sSUFBTUMsZUFBZSxHQUFHLFNBQWxCQSxlQUFrQjtBQUFBLE1BQUdDLFFBQUgsUUFBR0EsUUFBSDtBQUFBLFNBQWtCO0FBQVEsSUFBQSxLQUFLLEVBQUU7QUFBRUMsTUFBQUEsS0FBSyxFQUFFO0FBQVQ7QUFBZixLQUFrRCxHQUFsRCxFQUF1REQsUUFBdkQsRUFBaUUsR0FBakUsQ0FBbEI7QUFBQSxDQUF4Qjs7O0FBRVBELGVBQWUsQ0FBQ0csU0FBaEIsR0FBNEI7QUFBRUYsRUFBQUEsUUFBUSxFQUFFRyxzQkFBVUMsTUFBVixDQUFpQkM7QUFBN0IsQ0FBNUI7O0FBRUEsSUFBTUMsaUJBQWlCLEdBQUcsU0FBcEJBLGlCQUFvQixDQUFDQyxVQUFELEVBQWFDLGtCQUFiLEVBQW9DO0FBQzVELE1BQU1DLE9BQU8sR0FBRyxFQUFoQjtBQUNBLE1BQU1DLFNBQVMsR0FBRyxpQ0FBaUJGLGtCQUFqQixDQUFsQjs7QUFFQSxPQUFLLElBQUlHLENBQUMsR0FBRyxDQUFSLEVBQVdDLEdBQUcsR0FBR0wsVUFBVSxDQUFDTSxNQUFqQyxFQUF5Q0YsQ0FBQyxHQUFHQyxHQUE3QyxFQUFrREQsQ0FBQyxFQUFuRCxFQUF1RDtBQUNyRCxRQUFNRyxTQUFTLEdBQUdQLFVBQVUsQ0FBQ0ksQ0FBRCxDQUE1QjtBQUNBLFFBQU1JLEtBQUssR0FBR0osQ0FBZDtBQUVBRixJQUFBQSxPQUFPLENBQUNPLElBQVIsQ0FDRTtBQUFNLE1BQUEsR0FBRyxFQUFFRDtBQUFYLE9BQ0U7QUFBUSxNQUFBLEtBQUssRUFBRTtBQUFFZCxRQUFBQSxLQUFLLEVBQUU7QUFBVCxPQUFmO0FBQWlELE1BQUEsU0FBUyxFQUFFUztBQUE1RCxpQkFDTUksU0FBUyxDQUFDRyxJQUFWLENBQWVDLElBQWYsRUFETixFQURGLEVBSUdYLFVBQVUsQ0FBQ1EsS0FBSyxHQUFHLENBQVQsQ0FBVixHQUF3Qiw4Q0FBTyxHQUFQLENBQXhCLEdBQTZDLElBSmhELENBREY7QUFRRDs7QUFFRCxTQUFPTixPQUFQO0FBQ0QsQ0FuQkQ7O0FBcUJBLElBQU1VLDZCQUE2QixHQUFHLFNBQWhDQSw2QkFBZ0MsUUFJaEM7QUFBQSxNQUhKQyxTQUdJLFNBSEpBLFNBR0k7QUFBQSxNQUZKYixVQUVJLFNBRkpBLFVBRUk7QUFBQSxNQURKQyxrQkFDSSxTQURKQSxrQkFDSTtBQUNKLE1BQU1FLFNBQVMsR0FBRyxpQ0FBaUJGLGtCQUFqQixDQUFsQjs7QUFFQSxNQUFJYSxzQkFBc0IsQ0FBQ0Msb0JBQXZCLENBQTRDZixVQUE1QyxFQUF3RGEsU0FBeEQsQ0FBSixFQUF3RTtBQUN0RSxXQUNFLGdDQUFDLGVBQUQsUUFDR2IsVUFBVSxDQUFDLENBQUQsQ0FBVixDQUFjVSxJQUFkLENBQW1CQyxJQUFuQixFQURILEVBRUU7QUFBUSxNQUFBLEtBQUssRUFBRTtBQUFFakIsUUFBQUEsS0FBSyxFQUFFO0FBQVQsT0FBZjtBQUFpRCxNQUFBLFNBQVMsRUFBRVM7QUFBNUQsa0JBQ09aLFFBRFAsT0FGRixFQUtHUyxVQUFVLENBQUNBLFVBQVUsQ0FBQ00sTUFBWCxHQUFvQixDQUFyQixDQUFWLENBQWtDSSxJQUFsQyxDQUF1Q0MsSUFBdkMsRUFMSCxDQURGO0FBU0QsR0FWRCxNQVVPO0FBQ0wsV0FDRSxnQ0FBQyxlQUFELFFBQ0daLGlCQUFpQixDQUFDQyxVQUFELEVBQWFDLGtCQUFiLENBRHBCLENBREY7QUFLRDtBQUNGLENBeEJEOztBQTBCQVcsNkJBQTZCLENBQUNqQixTQUE5QixHQUEwQztBQUN4Q0ssRUFBQUEsVUFBVSxFQUFFSixzQkFBVW9CLEtBQVYsQ0FBZ0JsQixVQURZO0FBRXhDZSxFQUFBQSxTQUFTLEVBQUVqQixzQkFBVXFCLE1BQVYsQ0FBaUJuQixVQUZZO0FBR3hDRyxFQUFBQSxrQkFBa0IsRUFBRUwsc0JBQVVxQjtBQUhVLENBQTFDO2VBTWVMLDZCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgKiBhcyB3aW5kb3dTZWxlY3Rpb25IZWxwZXJzIGZyb20gJy4uL2hlbHBlcnMvd2luZG93U2VsZWN0aW9uSGVscGVycyc7XG5pbXBvcnQgeyBnZXRGb250Q2xhc3NOYW1lIH0gZnJvbSAnLi4vLi4vY29tbW9uL2ZvbnRVdGlscyc7XG5cbmNvbnN0IEVMTElQU0lTID0gJ+KApic7XG5cbmV4cG9ydCBjb25zdCBRdW9hdGF0aW9uTWFya3MgPSAoeyBjaGlsZHJlbiB9KSA9PiA8c3Ryb25nIHN0eWxlPXt7IGNvbG9yOiAndmFyKC0tYWNjZW50LWNvbG9yKScgfX0+eydcIid9e2NoaWxkcmVufXsnXCInfTwvc3Ryb25nPjtcblxuUXVvYXRhdGlvbk1hcmtzLnByb3BUeXBlcyA9IHsgY2hpbGRyZW46IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCB9O1xuXG5jb25zdCBnZXRTZWxlY3Rpb25TcGFucyA9IChzZWxlY3Rpb25zLCB0YXJnZXRMYW5ndWFnZUZvbnQpID0+IHtcbiAgY29uc3QgcmVzdWx0cyA9IFtdO1xuICBjb25zdCBmb250Q2xhc3MgPSBnZXRGb250Q2xhc3NOYW1lKHRhcmdldExhbmd1YWdlRm9udCk7XG5cbiAgZm9yIChsZXQgaSA9IDAsIGxlbiA9IHNlbGVjdGlvbnMubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHtcbiAgICBjb25zdCBzZWxlY3Rpb24gPSBzZWxlY3Rpb25zW2ldO1xuICAgIGNvbnN0IGluZGV4ID0gaTtcblxuICAgIHJlc3VsdHMucHVzaChcbiAgICAgIDxzcGFuIGtleT17aW5kZXh9ID5cbiAgICAgICAgPHN0cm9uZyBzdHlsZT17eyBjb2xvcjogJ3ZhcigtLWFjY2VudC1jb2xvciknIH19IGNsYXNzTmFtZT17Zm9udENsYXNzfT5cbiAgICAgICAgICB7YCR7c2VsZWN0aW9uLnRleHQudHJpbSgpfWB9XG4gICAgICAgIDwvc3Ryb25nPlxuICAgICAgICB7c2VsZWN0aW9uc1tpbmRleCArIDFdID8gPHNwYW4+eycgJ308L3NwYW4+IDogbnVsbH1cbiAgICAgIDwvc3Bhbj4sXG4gICAgKTtcbiAgfVxuXG4gIHJldHVybiByZXN1bHRzO1xufTtcblxuY29uc3QgSW5zdHJ1Y3Rpb25zQXJlYVRleHRTZWxlY3Rpb24gPSAoe1xuICB2ZXJzZVRleHQsXG4gIHNlbGVjdGlvbnMsXG4gIHRhcmdldExhbmd1YWdlRm9udCxcbn0pID0+IHtcbiAgY29uc3QgZm9udENsYXNzID0gZ2V0Rm9udENsYXNzTmFtZSh0YXJnZXRMYW5ndWFnZUZvbnQpO1xuXG4gIGlmICh3aW5kb3dTZWxlY3Rpb25IZWxwZXJzLnNob3VsZFJlbmRlckVsbGlwc2lzKHNlbGVjdGlvbnMsIHZlcnNlVGV4dCkpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPFF1b2F0YXRpb25NYXJrcz5cbiAgICAgICAge3NlbGVjdGlvbnNbMF0udGV4dC50cmltKCl9XG4gICAgICAgIDxzdHJvbmcgc3R5bGU9e3sgY29sb3I6ICd2YXIoLS1hY2NlbnQtY29sb3IpJyB9fSBjbGFzc05hbWU9e2ZvbnRDbGFzc30+XG4gICAgICAgICAge2AgJHtFTExJUFNJU30gYH1cbiAgICAgICAgPC9zdHJvbmc+XG4gICAgICAgIHtzZWxlY3Rpb25zW3NlbGVjdGlvbnMubGVuZ3RoIC0gMV0udGV4dC50cmltKCl9XG4gICAgICA8L1F1b2F0YXRpb25NYXJrcz5cbiAgICApO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiAoXG4gICAgICA8UXVvYXRhdGlvbk1hcmtzPlxuICAgICAgICB7Z2V0U2VsZWN0aW9uU3BhbnMoc2VsZWN0aW9ucywgdGFyZ2V0TGFuZ3VhZ2VGb250KX1cbiAgICAgIDwvUXVvYXRhdGlvbk1hcmtzPlxuICAgICk7XG4gIH1cbn07XG5cbkluc3RydWN0aW9uc0FyZWFUZXh0U2VsZWN0aW9uLnByb3BUeXBlcyA9IHtcbiAgc2VsZWN0aW9uczogUHJvcFR5cGVzLmFycmF5LmlzUmVxdWlyZWQsXG4gIHZlcnNlVGV4dDogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICB0YXJnZXRMYW5ndWFnZUZvbnQ6IFByb3BUeXBlcy5zdHJpbmcsXG59O1xuXG5leHBvcnQgZGVmYXVsdCBJbnN0cnVjdGlvbnNBcmVhVGV4dFNlbGVjdGlvbjtcbiJdfQ==