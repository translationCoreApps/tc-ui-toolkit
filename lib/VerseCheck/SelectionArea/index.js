"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

require("../VerseCheck.styles.css");

var _RenderSelectionTextComponent = _interopRequireDefault(require("../RenderSelectionTextComponent"));

// components
var SelectionArea = function SelectionArea(_ref) {
  var translate = _ref.translate,
      mode = _ref.mode,
      reference = _ref.reference,
      verseText = _ref.verseText,
      selections = _ref.selections,
      maximumSelections = _ref.maximumSelections,
      openAlertDialog = _ref.openAlertDialog,
      changeSelectionsInLocalState = _ref.changeSelectionsInLocalState,
      bookDetails = _ref.bookDetails,
      targetLanguageDetails = _ref.targetLanguageDetails,
      targetLanguageFont = _ref.targetLanguageFont;
  var book = targetLanguageDetails.book,
      languageDirection = targetLanguageDetails.direction;
  var bookName = book && book.name ? book.name : bookDetails.name;
  var languageName = targetLanguageDetails.name || null;
  return _react["default"].createElement("div", {
    className: "selection-area-root"
  }, _react["default"].createElement("div", {
    className: "verse-title"
  }, _react["default"].createElement("div", {
    className: "pane",
    style: {
      display: 'flex',
      flexDirection: 'column'
    }
  }, _react["default"].createElement("span", {
    className: "verse-title-title"
  }, languageName), _react["default"].createElement("span", {
    className: "verse-title-subtitle"
  }, bookName, " ", reference.chapter + ':' + reference.verse))), _react["default"].createElement("div", {
    style: {
      overflow: 'auto'
    }
  }, _react["default"].createElement("div", {
    className: languageDirection === 'ltr' ? 'ltr-content' : 'rtl-content'
  }, _react["default"].createElement(_RenderSelectionTextComponent["default"], {
    mode: mode,
    translate: translate,
    verseText: verseText,
    selections: selections,
    openAlertDialog: openAlertDialog,
    maximumSelections: maximumSelections,
    targetLanguageFont: targetLanguageFont,
    changeSelectionsInLocalState: changeSelectionsInLocalState
  }))));
};

SelectionArea.propTypes = {
  reference: _propTypes["default"].object.isRequired,
  mode: _propTypes["default"].string.isRequired,
  verseText: _propTypes["default"].string.isRequired,
  selections: _propTypes["default"].array.isRequired,
  translate: _propTypes["default"].func.isRequired,
  maximumSelections: _propTypes["default"].number.isRequired,
  changeSelectionsInLocalState: _propTypes["default"].func.isRequired,
  openAlertDialog: _propTypes["default"].func.isRequired,
  bookDetails: _propTypes["default"].object.isRequired,
  targetLanguageDetails: _propTypes["default"].object.isRequired,
  targetLanguageFont: _propTypes["default"].string
};
var _default = SelectionArea;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9WZXJzZUNoZWNrL1NlbGVjdGlvbkFyZWEvaW5kZXguanMiXSwibmFtZXMiOlsiU2VsZWN0aW9uQXJlYSIsInRyYW5zbGF0ZSIsIm1vZGUiLCJyZWZlcmVuY2UiLCJ2ZXJzZVRleHQiLCJzZWxlY3Rpb25zIiwibWF4aW11bVNlbGVjdGlvbnMiLCJvcGVuQWxlcnREaWFsb2ciLCJjaGFuZ2VTZWxlY3Rpb25zSW5Mb2NhbFN0YXRlIiwiYm9va0RldGFpbHMiLCJ0YXJnZXRMYW5ndWFnZURldGFpbHMiLCJ0YXJnZXRMYW5ndWFnZUZvbnQiLCJib29rIiwibGFuZ3VhZ2VEaXJlY3Rpb24iLCJkaXJlY3Rpb24iLCJib29rTmFtZSIsIm5hbWUiLCJsYW5ndWFnZU5hbWUiLCJkaXNwbGF5IiwiZmxleERpcmVjdGlvbiIsImNoYXB0ZXIiLCJ2ZXJzZSIsIm92ZXJmbG93IiwicHJvcFR5cGVzIiwiUHJvcFR5cGVzIiwib2JqZWN0IiwiaXNSZXF1aXJlZCIsInN0cmluZyIsImFycmF5IiwiZnVuYyIsIm51bWJlciJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBRUE7O0FBREE7QUFHQSxJQUFNQSxhQUFhLEdBQUcsU0FBaEJBLGFBQWdCLE9BWWhCO0FBQUEsTUFYSkMsU0FXSSxRQVhKQSxTQVdJO0FBQUEsTUFWSkMsSUFVSSxRQVZKQSxJQVVJO0FBQUEsTUFUSkMsU0FTSSxRQVRKQSxTQVNJO0FBQUEsTUFSSkMsU0FRSSxRQVJKQSxTQVFJO0FBQUEsTUFQSkMsVUFPSSxRQVBKQSxVQU9JO0FBQUEsTUFOSkMsaUJBTUksUUFOSkEsaUJBTUk7QUFBQSxNQUxKQyxlQUtJLFFBTEpBLGVBS0k7QUFBQSxNQUpKQyw0QkFJSSxRQUpKQSw0QkFJSTtBQUFBLE1BSEpDLFdBR0ksUUFISkEsV0FHSTtBQUFBLE1BRkpDLHFCQUVJLFFBRkpBLHFCQUVJO0FBQUEsTUFESkMsa0JBQ0ksUUFESkEsa0JBQ0k7QUFBQSxNQUNJQyxJQURKLEdBQzJDRixxQkFEM0MsQ0FDSUUsSUFESjtBQUFBLE1BQ3FCQyxpQkFEckIsR0FDMkNILHFCQUQzQyxDQUNVSSxTQURWO0FBRUosTUFBTUMsUUFBUSxHQUFHSCxJQUFJLElBQUlBLElBQUksQ0FBQ0ksSUFBYixHQUFvQkosSUFBSSxDQUFDSSxJQUF6QixHQUFnQ1AsV0FBVyxDQUFDTyxJQUE3RDtBQUNBLE1BQU1DLFlBQVksR0FBR1AscUJBQXFCLENBQUNNLElBQXRCLElBQThCLElBQW5EO0FBRUEsU0FDRTtBQUFLLElBQUEsU0FBUyxFQUFDO0FBQWYsS0FDRTtBQUFLLElBQUEsU0FBUyxFQUFDO0FBQWYsS0FDRTtBQUFLLElBQUEsU0FBUyxFQUFDLE1BQWY7QUFBc0IsSUFBQSxLQUFLLEVBQUU7QUFBRUUsTUFBQUEsT0FBTyxFQUFFLE1BQVg7QUFBbUJDLE1BQUFBLGFBQWEsRUFBRTtBQUFsQztBQUE3QixLQUNFO0FBQU0sSUFBQSxTQUFTLEVBQUM7QUFBaEIsS0FDR0YsWUFESCxDQURGLEVBSUU7QUFBTSxJQUFBLFNBQVMsRUFBQztBQUFoQixLQUNHRixRQURILE9BQ2NaLFNBQVMsQ0FBQ2lCLE9BQVYsR0FBb0IsR0FBcEIsR0FBMEJqQixTQUFTLENBQUNrQixLQURsRCxDQUpGLENBREYsQ0FERixFQVdFO0FBQUssSUFBQSxLQUFLLEVBQUU7QUFBRUMsTUFBQUEsUUFBUSxFQUFFO0FBQVo7QUFBWixLQUNFO0FBQUssSUFBQSxTQUFTLEVBQUVULGlCQUFpQixLQUFLLEtBQXRCLEdBQThCLGFBQTlCLEdBQThDO0FBQTlELEtBQ0UsZ0NBQUMsd0NBQUQ7QUFDRSxJQUFBLElBQUksRUFBRVgsSUFEUjtBQUVFLElBQUEsU0FBUyxFQUFFRCxTQUZiO0FBR0UsSUFBQSxTQUFTLEVBQUVHLFNBSGI7QUFJRSxJQUFBLFVBQVUsRUFBRUMsVUFKZDtBQUtFLElBQUEsZUFBZSxFQUFFRSxlQUxuQjtBQU1FLElBQUEsaUJBQWlCLEVBQUVELGlCQU5yQjtBQU9FLElBQUEsa0JBQWtCLEVBQUVLLGtCQVB0QjtBQVFFLElBQUEsNEJBQTRCLEVBQUVIO0FBUmhDLElBREYsQ0FERixDQVhGLENBREY7QUE0QkQsQ0E3Q0Q7O0FBZ0RBUixhQUFhLENBQUN1QixTQUFkLEdBQTBCO0FBQ3hCcEIsRUFBQUEsU0FBUyxFQUFFcUIsc0JBQVVDLE1BQVYsQ0FBaUJDLFVBREo7QUFFeEJ4QixFQUFBQSxJQUFJLEVBQUVzQixzQkFBVUcsTUFBVixDQUFpQkQsVUFGQztBQUd4QnRCLEVBQUFBLFNBQVMsRUFBRW9CLHNCQUFVRyxNQUFWLENBQWlCRCxVQUhKO0FBSXhCckIsRUFBQUEsVUFBVSxFQUFFbUIsc0JBQVVJLEtBQVYsQ0FBZ0JGLFVBSko7QUFLeEJ6QixFQUFBQSxTQUFTLEVBQUV1QixzQkFBVUssSUFBVixDQUFlSCxVQUxGO0FBTXhCcEIsRUFBQUEsaUJBQWlCLEVBQUVrQixzQkFBVU0sTUFBVixDQUFpQkosVUFOWjtBQU94QmxCLEVBQUFBLDRCQUE0QixFQUFFZ0Isc0JBQVVLLElBQVYsQ0FBZUgsVUFQckI7QUFReEJuQixFQUFBQSxlQUFlLEVBQUVpQixzQkFBVUssSUFBVixDQUFlSCxVQVJSO0FBU3hCakIsRUFBQUEsV0FBVyxFQUFFZSxzQkFBVUMsTUFBVixDQUFpQkMsVUFUTjtBQVV4QmhCLEVBQUFBLHFCQUFxQixFQUFFYyxzQkFBVUMsTUFBVixDQUFpQkMsVUFWaEI7QUFXeEJmLEVBQUFBLGtCQUFrQixFQUFFYSxzQkFBVUc7QUFYTixDQUExQjtlQWNlM0IsYSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0ICcuLi9WZXJzZUNoZWNrLnN0eWxlcy5jc3MnO1xuLy8gY29tcG9uZW50c1xuaW1wb3J0IFJlbmRlclNlbGVjdGlvblRleHRDb21wb25lbnQgZnJvbSAnLi4vUmVuZGVyU2VsZWN0aW9uVGV4dENvbXBvbmVudCc7XG5cbmNvbnN0IFNlbGVjdGlvbkFyZWEgPSAoe1xuICB0cmFuc2xhdGUsXG4gIG1vZGUsXG4gIHJlZmVyZW5jZSxcbiAgdmVyc2VUZXh0LFxuICBzZWxlY3Rpb25zLFxuICBtYXhpbXVtU2VsZWN0aW9ucyxcbiAgb3BlbkFsZXJ0RGlhbG9nLFxuICBjaGFuZ2VTZWxlY3Rpb25zSW5Mb2NhbFN0YXRlLFxuICBib29rRGV0YWlscyxcbiAgdGFyZ2V0TGFuZ3VhZ2VEZXRhaWxzLFxuICB0YXJnZXRMYW5ndWFnZUZvbnQsXG59KSA9PiB7XG4gIGNvbnN0IHsgYm9vaywgZGlyZWN0aW9uOiBsYW5ndWFnZURpcmVjdGlvbiB9ID0gdGFyZ2V0TGFuZ3VhZ2VEZXRhaWxzO1xuICBjb25zdCBib29rTmFtZSA9IGJvb2sgJiYgYm9vay5uYW1lID8gYm9vay5uYW1lIDogYm9va0RldGFpbHMubmFtZTtcbiAgY29uc3QgbGFuZ3VhZ2VOYW1lID0gdGFyZ2V0TGFuZ3VhZ2VEZXRhaWxzLm5hbWUgfHwgbnVsbDtcblxuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPSdzZWxlY3Rpb24tYXJlYS1yb290Jz5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPSd2ZXJzZS10aXRsZSc+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPSdwYW5lJyBzdHlsZT17eyBkaXNwbGF5OiAnZmxleCcsIGZsZXhEaXJlY3Rpb246ICdjb2x1bW4nIH19PlxuICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT0ndmVyc2UtdGl0bGUtdGl0bGUnPlxuICAgICAgICAgICAge2xhbmd1YWdlTmFtZX1cbiAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPSd2ZXJzZS10aXRsZS1zdWJ0aXRsZSc+XG4gICAgICAgICAgICB7Ym9va05hbWV9IHtyZWZlcmVuY2UuY2hhcHRlciArICc6JyArIHJlZmVyZW5jZS52ZXJzZX1cbiAgICAgICAgICA8L3NwYW4+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgICA8ZGl2IHN0eWxlPXt7IG92ZXJmbG93OiAnYXV0bycgfX0+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPXtsYW5ndWFnZURpcmVjdGlvbiA9PT0gJ2x0cicgPyAnbHRyLWNvbnRlbnQnIDogJ3J0bC1jb250ZW50J30+XG4gICAgICAgICAgPFJlbmRlclNlbGVjdGlvblRleHRDb21wb25lbnRcbiAgICAgICAgICAgIG1vZGU9e21vZGV9XG4gICAgICAgICAgICB0cmFuc2xhdGU9e3RyYW5zbGF0ZX1cbiAgICAgICAgICAgIHZlcnNlVGV4dD17dmVyc2VUZXh0fVxuICAgICAgICAgICAgc2VsZWN0aW9ucz17c2VsZWN0aW9uc31cbiAgICAgICAgICAgIG9wZW5BbGVydERpYWxvZz17b3BlbkFsZXJ0RGlhbG9nfVxuICAgICAgICAgICAgbWF4aW11bVNlbGVjdGlvbnM9e21heGltdW1TZWxlY3Rpb25zfVxuICAgICAgICAgICAgdGFyZ2V0TGFuZ3VhZ2VGb250PXt0YXJnZXRMYW5ndWFnZUZvbnR9XG4gICAgICAgICAgICBjaGFuZ2VTZWxlY3Rpb25zSW5Mb2NhbFN0YXRlPXtjaGFuZ2VTZWxlY3Rpb25zSW5Mb2NhbFN0YXRlfVxuICAgICAgICAgIC8+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG4gICk7XG59O1xuXG5cblNlbGVjdGlvbkFyZWEucHJvcFR5cGVzID0ge1xuICByZWZlcmVuY2U6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCxcbiAgbW9kZTogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICB2ZXJzZVRleHQ6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcbiAgc2VsZWN0aW9uczogUHJvcFR5cGVzLmFycmF5LmlzUmVxdWlyZWQsXG4gIHRyYW5zbGF0ZTogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgbWF4aW11bVNlbGVjdGlvbnM6IFByb3BUeXBlcy5udW1iZXIuaXNSZXF1aXJlZCxcbiAgY2hhbmdlU2VsZWN0aW9uc0luTG9jYWxTdGF0ZTogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgb3BlbkFsZXJ0RGlhbG9nOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICBib29rRGV0YWlsczogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLFxuICB0YXJnZXRMYW5ndWFnZURldGFpbHM6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCxcbiAgdGFyZ2V0TGFuZ3VhZ2VGb250OiBQcm9wVHlwZXMuc3RyaW5nLFxufTtcblxuZXhwb3J0IGRlZmF1bHQgU2VsZWN0aW9uQXJlYTtcbiJdfQ==