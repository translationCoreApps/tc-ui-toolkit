"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _DefaultArea = _interopRequireDefault(require("../DefaultArea"));

var _SelectionArea = _interopRequireDefault(require("../SelectionArea"));

var _InstructionsArea = _interopRequireDefault(require("../InstructionsArea"));

var _EditVerseArea = _interopRequireDefault(require("../EditVerseArea"));

var _CommentArea = _interopRequireDefault(require("../CommentArea"));

require("./CheckArea.styles.css");

// components
var CheckArea = function CheckArea(_ref) {
  var contextId = _ref.contextId,
      mode = _ref.mode,
      tags = _ref.tags,
      verseText = _ref.verseText,
      unfilteredVerseText = _ref.unfilteredVerseText,
      isVerseChanged = _ref.isVerseChanged,
      comment = _ref.comment,
      newSelections = _ref.newSelections,
      selections = _ref.selections,
      translate = _ref.translate,
      invalidated = _ref.invalidated,
      targetBible = _ref.targetBible,
      alignedGLText = _ref.alignedGLText,
      nothingToSelect = _ref.nothingToSelect,
      maximumSelections = _ref.maximumSelections,
      handleTagsCheckbox = _ref.handleTagsCheckbox,
      handleEditVerse = _ref.handleEditVerse,
      checkIfVerseChanged = _ref.checkIfVerseChanged,
      handleComment = _ref.handleComment,
      checkIfCommentChanged = _ref.checkIfCommentChanged,
      openAlertDialog = _ref.openAlertDialog,
      changeSelectionsInLocalState = _ref.changeSelectionsInLocalState,
      validateSelections = _ref.validateSelections,
      bookDetails = _ref.bookDetails,
      targetLanguageDetails = _ref.targetLanguageDetails,
      targetLanguageFont = _ref.targetLanguageFont;
  var modeArea;

  var _ref2 = targetLanguageDetails || {},
      _ref2$direction = _ref2.direction,
      languageDirection = _ref2$direction === void 0 ? 'ltr' : _ref2$direction;

  switch (mode) {
    case 'edit':
      modeArea = _react["default"].createElement(_EditVerseArea["default"], {
        tags: tags,
        verseText: unfilteredVerseText,
        isVerseChanged: isVerseChanged,
        handleTagsCheckbox: handleTagsCheckbox,
        handleEditVerse: handleEditVerse,
        checkIfVerseChanged: checkIfVerseChanged,
        languageDirection: languageDirection,
        translate: translate,
        targetLanguageFont: targetLanguageFont
      });
      break;

    case 'comment':
      modeArea = _react["default"].createElement(_CommentArea["default"], {
        comment: comment,
        translate: translate,
        handleComment: handleComment,
        checkIfCommentChanged: checkIfCommentChanged
      });
      break;

    case 'select':
      modeArea = _react["default"].createElement("div", {
        style: {
          WebkitUserSelect: 'none',
          display: 'flex',
          flex: '1',
          justifyContent: 'center',
          alignItems: 'center',
          overflow: 'auto'
        }
      }, _react["default"].createElement(_InstructionsArea["default"], {
        verseText: verseText,
        selections: selections,
        alignedGLText: alignedGLText,
        mode: mode,
        translate: translate,
        invalidated: invalidated,
        targetLanguageFont: targetLanguageFont
      }));
      break;

    case 'default':
    default:
      modeArea = _react["default"].createElement("div", {
        style: {
          WebkitUserSelect: 'none',
          display: 'flex',
          justifyContent: 'center',
          alignItems: 'center',
          height: '100%'
        }
      }, _react["default"].createElement(_InstructionsArea["default"], {
        dontShowTranslation: true,
        verseText: verseText,
        selections: selections,
        alignedGLText: alignedGLText,
        translate: translate,
        invalidated: invalidated,
        nothingToSelect: nothingToSelect,
        targetLanguageFont: targetLanguageFont
      }));
  }

  return _react["default"].createElement("div", {
    className: "check-area"
  }, mode === 'select' ? _react["default"].createElement(_SelectionArea["default"], {
    translate: translate,
    verseText: verseText,
    selections: newSelections,
    mode: mode,
    reference: contextId.reference,
    maximumSelections: maximumSelections,
    openAlertDialog: openAlertDialog,
    changeSelectionsInLocalState: changeSelectionsInLocalState,
    bookDetails: bookDetails,
    targetLanguageDetails: targetLanguageDetails,
    targetLanguageFont: targetLanguageFont
  }) : _react["default"].createElement(_DefaultArea["default"], {
    reference: contextId.reference,
    translate: translate,
    verseText: verseText,
    selections: selections,
    targetBible: targetBible,
    validateSelections: validateSelections,
    bookDetails: bookDetails,
    targetLanguageDetails: targetLanguageDetails,
    targetLanguageFont: targetLanguageFont
  }), _react["default"].createElement("div", {
    style: {
      borderLeft: '1px solid var(--border-color)',
      flex: 1,
      overflowY: 'auto',
      display: 'flex',
      justifyContent: 'center'
    }
  }, modeArea));
};

CheckArea.propTypes = {
  translate: _propTypes["default"].func.isRequired,
  mode: _propTypes["default"].string.isRequired,
  tags: _propTypes["default"].array.isRequired,
  invalidated: _propTypes["default"].bool.isRequired,
  verseText: _propTypes["default"].string.isRequired,
  unfilteredVerseText: _propTypes["default"].string.isRequired,
  isVerseChanged: _propTypes["default"].bool.isRequired,
  comment: _propTypes["default"].string.isRequired,
  contextId: _propTypes["default"].object.isRequired,
  selections: _propTypes["default"].array.isRequired,
  newSelections: _propTypes["default"].array.isRequired,
  targetBible: _propTypes["default"].object.isRequired,
  alignedGLText: _propTypes["default"].string.isRequired,
  nothingToSelect: _propTypes["default"].bool.isRequired,
  maximumSelections: _propTypes["default"].number.isRequired,
  bookDetails: _propTypes["default"].object.isRequired,
  targetLanguageDetails: _propTypes["default"].object.isRequired,
  handleTagsCheckbox: _propTypes["default"].func.isRequired,
  handleEditVerse: _propTypes["default"].func.isRequired,
  handleComment: _propTypes["default"].func.isRequired,
  checkIfVerseChanged: _propTypes["default"].func.isRequired,
  checkIfCommentChanged: _propTypes["default"].func.isRequired,
  openAlertDialog: _propTypes["default"].func.isRequired,
  changeSelectionsInLocalState: _propTypes["default"].func.isRequired,
  validateSelections: _propTypes["default"].func.isRequired,
  targetLanguageFont: _propTypes["default"].string
};
var _default = CheckArea;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,